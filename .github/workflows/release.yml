name: Build and Deploy to GKE

on:
  push:
    branches: [ "master" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: europe-southwest1
  GKE_CLUSTER: dependency-track    # TODO: update to cluster name
  GKE_ZONE: europe-west3   # TODO: update to cluster zone
  DEPLOYMENT_NAME: deployment # TODO: update to deployment name
  REPOSITORY: gar-final-devops # TODO: update to Artifact Registry docker repository
  BUCKET_NAME: cs-final-devops
  IMAGE: dotnet-microservice

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3  
    
    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: | 
          6
          7

    - name: 'Setup CycloneDX'
      run: dotnet tool install --global CycloneDX --version 2.7.0  

    - name: 'Restore app'
      run: dotnet restore DotNetMicroservice.sln

    - name: 'Build app'
      run: dotnet build DotNetMicroservice.sln

    - name: 'Test app'
      run: dotnet test DotNetMicroservice.sln

    - name: 'Generating bom file'
      run: |
        mkdir bom_file_output
        dotnet CycloneDX DotNetMicroservice.sln -o bom_file_output

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        project_id: '${{ env.PROJECT_ID }}'

    #- name: 'Upload bom file to google storage'
    #  uses: 'google-github-actions/upload-cloud-storage@v1'
    #  with:
    #    path: 'bom_file_output/bom.xml'
    #    process_gcloudignore: false
    #    destination: ${{ env.BUCKET_NAME }}
    #    
    #- name: Uploading BOM file to dependency track
    #  uses: DependencyTrack/gh-upload-sbom@v1.0.0
    #  with:
    #    serverhostname: 'dt.endpoints.proyecto-final-devops.cloud.goog'
    #    apikey: '${{ secrets.DT_API_KEY }}'
    #    projectname: 'MicroDotnet'
    #    projectversion: 'master'
    #    port: 443
    #    bomfilename: 'bom_file_output/bom.xml'

    # ------ Build docker image ---------------   

    - name: 'Docker autentication in google artifact registry'
      run: |-
        gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
        
    # Build the Docker image
    - name: Build docker image
      run: |-
        cd Microservice
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
          
    # Push the Docker image to Google Artifact Registry
    - name: Publish docker image to google artifact registry
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
        
        
    # ------ Deploy to GKE ---------------   
 
    # Setup gcloud CLI
    #- uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
    #  with:
    #    service_account_key: ${{ secrets.GKE_SA_KEY }}
    #    project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker  

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
     

    # Deploy to GKE
    #
    - name: Deploy to GKE
      run: kubectl apply -f "k8s/$DEPLOYMENT_NAME.yaml"
